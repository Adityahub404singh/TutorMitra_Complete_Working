import { create } from "zustand";
import api from "../api/api";

export interface User {
Â  _id: string;
Â  name: string;
Â  email: string;
Â  role: "student" | "tutor";
}

interface AuthState {
Â  user: User | null;
Â  loading: boolean;
Â  setUser: (user: User | null) => void;
Â  signup: (
Â  Â  payload: { name: string; email: string; password: string; role: string }
Â  ) => Promise<"student" | "tutor">;
Â  login: (
Â  Â  payload: { email: string; password: string; role: string }
Â  ) => Promise<"student" | "tutor">;
Â  logout: () => void;
Â  restoreSession: () => void;
}

export const useAuth = create<AuthState>((set) => ({
Â  user: null,
Â  loading: false,

Â  setUser: (user) => {
Â  Â  set({ user });
Â  Â  if (user) localStorage.setItem("tm_user", JSON.stringify(user));
Â  Â  else localStorage.removeItem("tm_user");
Â  },

Â  signup: async (payload) => {
Â  Â  set({ loading: true });
Â  Â  try {
Â  Â  Â  const res = await api.post("/auth/signup", payload);
Â  Â  Â  localStorage.setItem("tm_token", res.data.token);
Â  Â  Â  localStorage.setItem("tm_user", JSON.stringify(res.data.user));
Â  Â  Â  set({ user: res.data.user, loading: false });
Â  Â  Â  return res.data.user.role;
Â  Â  } catch (e) {
Â  Â  Â  set({ loading: false });
Â  Â  Â  throw e;
Â  Â  }
Â  },

Â  login: async (payload) => {
Â  Â  set({ loading: true });
Â  Â  try {
Â  Â  Â  const res = await api.post("/auth/login", payload);
Â  Â  Â  localStorage.setItem("tm_token", res.data.token);
Â  Â  Â  localStorage.setItem("tm_user", JSON.stringify(res.data.user));
Â  Â  Â  set({ user: res.data.user, loading: false });
Â  Â  Â  return res.data.user.role;
Â  Â  } catch (e) {
Â  Â  Â  set({ loading: false });
Â  Â  Â  throw e;
Â  Â  }
Â  },

Â  logout: () => {
Â  Â  localStorage.removeItem("tm_token");
Â  Â  localStorage.removeItem("tm_user");
Â  Â  set({ user: null });
Â  },

Â  restoreSession: async () => {
Â  Â  const token = localStorage.getItem("tm_token");
Â  Â  const userStr = localStorage.getItem("tm_user");

Â  Â  // ðŸ‘‡ Yeh check aur catch dhyan se lagao!
Â  Â  if (!token || !userStr || userStr === "undefined" || userStr.trim() === "") {
Â  Â  Â  set({ user: null, loading: false });
Â  Â  Â  return;
Â  Â  }

Â  Â  set({ loading: true });
Â  Â  try {
Â  Â  Â  // âš¡ Optionally verify token with backend:
Â  Â  Â  const res = await api.get("/auth/me", {
Â  Â  Â  Â  headers: { Authorization: `Bearer ${token}` },
Â  Â  Â  });
Â  Â  Â  set({ user: res.data.user, loading: false });
Â  Â  Â  localStorage.setItem("tm_user", JSON.stringify(res.data.user));
Â  Â  } catch {
Â  Â  Â  localStorage.removeItem("tm_token");
Â  Â  Â  localStorage.removeItem("tm_user");
Â  Â  Â  set({ user: null, loading: false });
Â  Â  }
Â  },
}));
